[{"C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\screens\\CartScreen.js":"1","C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\store.js":"2","C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\actions\\cartActions.js":"3","C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\reportWebVitals.js":"4","C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\constants\\userConstants.js":"5","C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\index.js":"6","C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\serviceWorker.js":"7","C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\components\\Loader.js":"8","C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\screens\\LoginScreen.js":"9","C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\actions\\productActions.js":"10","C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\App.js":"11","C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\actions\\userActions.js":"12","C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\constants\\productConstants.js":"13","C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\components\\Header.js":"14","C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\components\\FormContainer.js":"15","C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\components\\Rating.js":"16","C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\components\\Product.js":"17","C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\reducers\\userReducers.js":"18","C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\screens\\RegisterScreen.js":"19","C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\screens\\ProfileScreen.js":"20","C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\components\\Message.js":"21","C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\screens\\ShippingScreen.js":"22","C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\constants\\cartConstants.js":"23","C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\reducers\\cartReducers.js":"24","C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\components\\CheckoutSteps.js":"25","C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\screens\\PaymentScreen.js":"26","C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\screens\\PlaceOrderScreen.js":"27","C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\constants\\orderConstants.js":"28","C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\reducers\\orderReducers.js":"29","C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\actions\\orderActions.js":"30","C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\reducers\\productReducers.js":"31","C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\screens\\HomeScreen.js":"32","C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\components\\Footer.js":"33","C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\screens\\ProductScreen.js":"34","C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\screens\\OrderScreen.js":"35","C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\screens\\UserListScreen.js":"36","C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\screens\\UserEditScreen.js":"37","C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\screens\\ProductListScreen.js":"38","C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\screens\\ProductEditScreen.js":"39"},{"size":3899,"mtime":1618456273360,"results":"40","hashOfConfig":"41"},{"size":2118,"mtime":1619582929875,"results":"42","hashOfConfig":"41"},{"size":1426,"mtime":1618972186647,"results":"43","hashOfConfig":"41"},{"size":362,"mtime":1612013371025,"results":"44","hashOfConfig":"41"},{"size":1506,"mtime":1619395536480,"results":"45","hashOfConfig":"41"},{"size":722,"mtime":1618449594164,"results":"46","hashOfConfig":"41"},{"size":5227,"mtime":1612012451951,"results":"47","hashOfConfig":"41"},{"size":346,"mtime":1612621529441,"results":"48","hashOfConfig":"41"},{"size":2291,"mtime":1618800650555,"results":"49","hashOfConfig":"41"},{"size":4183,"mtime":1619583147438,"results":"50","hashOfConfig":"41"},{"size":2186,"mtime":1619582515434,"results":"51","hashOfConfig":"41"},{"size":6887,"mtime":1619396235903,"results":"52","hashOfConfig":"41"},{"size":1050,"mtime":1619582712859,"results":"53","hashOfConfig":"41"},{"size":2997,"mtime":1619366983020,"results":"54","hashOfConfig":"41"},{"size":397,"mtime":1618789992797,"results":"55","hashOfConfig":"41"},{"size":1048,"mtime":1619099575609,"results":"56","hashOfConfig":"41"},{"size":875,"mtime":1612111489718,"results":"57","hashOfConfig":"41"},{"size":3903,"mtime":1619395787766,"results":"58","hashOfConfig":"41"},{"size":3316,"mtime":1618893136745,"results":"59","hashOfConfig":"41"},{"size":6594,"mtime":1619161453188,"results":"60","hashOfConfig":"41"},{"size":296,"mtime":1612357286369,"results":"61","hashOfConfig":"41"},{"size":3070,"mtime":1618971249874,"results":"62","hashOfConfig":"41"},{"size":236,"mtime":1618972092159,"results":"63","hashOfConfig":"41"},{"size":1378,"mtime":1619005034695,"results":"64","hashOfConfig":"41"},{"size":1610,"mtime":1618971276468,"results":"65","hashOfConfig":"41"},{"size":1869,"mtime":1619007029542,"results":"66","hashOfConfig":"41"},{"size":5347,"mtime":1619146726865,"results":"67","hashOfConfig":"41"},{"size":798,"mtime":1619284124439,"results":"68","hashOfConfig":"41"},{"size":2703,"mtime":1619284307869,"results":"69","hashOfConfig":"41"},{"size":6046,"mtime":1619159410639,"results":"70","hashOfConfig":"41"},{"size":2819,"mtime":1619582847213,"results":"71","hashOfConfig":"41"},{"size":1257,"mtime":1618451410645,"results":"72","hashOfConfig":"41"},{"size":426,"mtime":1612026534412,"results":"73","hashOfConfig":"41"},{"size":4238,"mtime":1612637664897,"results":"74","hashOfConfig":"41"},{"size":7063,"mtime":1619158201630,"results":"75","hashOfConfig":"41"},{"size":3272,"mtime":1619391395155,"results":"76","hashOfConfig":"41"},{"size":3160,"mtime":1619396725856,"results":"77","hashOfConfig":"41"},{"size":4304,"mtime":1619579443168,"results":"78","hashOfConfig":"41"},{"size":5215,"mtime":1619583606259,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"15zwo7d",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"91"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"85"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"82"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"82"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\screens\\CartScreen.js",[],["174","175"],"C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\store.js",[],["176","177"],"C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\actions\\cartActions.js",[],["178","179"],"C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\reportWebVitals.js",[],["180","181"],"C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\index.js",["182"],"import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\n//import store from './store.js'\nimport store from './store'\nimport './bootstrap.min.css'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  //use store provider instead of React.StrictMode\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\serviceWorker.js",[],"C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\actions\\productActions.js",["183"],"import axios from 'axios'\r\nimport { PRODUCT_LIST_REQUEST, PRODUCT_LIST_FAIL, PRODUCT_LIST_SUCCESS, \r\n  PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, \r\n  PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_FAIL,\r\n  PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL } from '../constants/productConstants'\r\n\r\nexport const listProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get('/api/products')\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: PRODUCT_DELETE_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.delete(`/api/products/${id}`, config)\r\n  \r\n      dispatch({\r\n        type: PRODUCT_DELETE_SUCCESS,\r\n      })\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    //   if (message === 'Not authorized, token failed') {\r\n    //     dispatch(logout())\r\n    //   }\r\n      dispatch({\r\n        type:  PRODUCT_DELETE_FAIL,\r\n        payload: message,\r\n      })\r\n    }\r\n  }\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: PRODUCT_UPDATE_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.put(`/api/products/${product._id}`, product, config)\r\n  \r\n      dispatch({\r\n        type: PRODUCT_UPDATE_SUCCESS,\r\n        payload: data\r\n      })\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    //   if (message === 'Not authorized, token failed') {\r\n    //     dispatch(logout())\r\n    //   }\r\n      dispatch({\r\n        type:  PRODUCT_UPDATE_FAIL,\r\n        payload: message,\r\n      })\r\n    }\r\n  }\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.post(`/api/products/`, {}, config)\r\n  \r\n      dispatch({\r\n        type: PRODUCT_CREATE_SUCCESS,\r\n        payload: data\r\n      })\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n    //   if (message === 'Not authorized, token failed') {\r\n    //     dispatch(logout())\r\n    //   }\r\n      dispatch({\r\n        type:  PRODUCT_CREATE_FAIL,\r\n        payload: message,\r\n      })\r\n    }\r\n  }","C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\App.js",[],"C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\actions\\userActions.js",["184"],"import axios from 'axios'\r\nimport { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_DETAILS_RESET, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_LIST_RESET, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_RESET } from '../constants/userConstants'\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST,    \r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/users/login', { email, password }, config)\r\n\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    \r\n    localStorage.removeItem('userInfo')\r\n\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET})\r\n    //            history.push('/login')\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST,    \r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/users', { name, email, password }, config)\r\n\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST,    \r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users/${id}`, config)\r\n\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST,    \r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put('/api/users/profile', user, config)\r\n\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST,    \r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n\r\n        dispatch({ type: USER_UPDATE_SUCCESS})\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST,    \r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users/`, config)\r\n\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST,    \r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/users/${id}`, config)\r\n\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n","C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\components\\Header.js",["185"],"import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Container, Dropdown, Nav, Navbar, NavDropdown } from 'react-bootstrap'\r\nimport { logout } from '../actions/userActions'\r\n\r\n\r\nconst Header = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n    <header>\r\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n            <Container>\r\n                <LinkContainer to='/'>\r\n                    <Navbar.Brand>ProShop</Navbar.Brand>\r\n                </LinkContainer>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"ml-auto\">\r\n                        <LinkContainer to=\"/cart\">                            \r\n                            <Nav.Link>\r\n                                <i className=\"fas fa-shopping-cart\">Cart</i>\r\n                            </Nav.Link>\r\n                        </LinkContainer>\r\n                        {userInfo ? (\r\n                            <NavDropdown title={userInfo.name} id='username'>\r\n                                <LinkContainer to='/profile'>\r\n                                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <NavDropdown.Item onClick={logoutHandler}>\r\n                                    Logout\r\n                                </NavDropdown.Item>\r\n                            </NavDropdown>\r\n                        ) : (\r\n                        <LinkContainer to='/login'>\r\n                            <Nav.Link>\r\n                                <i className=\"fas fa-user\">Sign In</i>\r\n                            </Nav.Link>\r\n                        </LinkContainer>)}\r\n\r\n                        {userInfo && userInfo.isAdmin && (\r\n                            <NavDropdown title='Admin' id='adminmenu'>\r\n                                <LinkContainer to='/admin/userlist'>\r\n                                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to='/admin/productlist'>\r\n                                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to='/admin/orderlist'>\r\n                                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                            </NavDropdown>\r\n                        )}\r\n\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    </header>\r\n    )\r\n}\r\nexport default Header","C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\components\\Rating.js",["186"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n    return (\r\n        <div className='rating'>\r\n            <span><i style={{color}} className={value >= 1 ? 'fas fa-star' : value >= 0.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i></span>\r\n            <span><i style={{color}} className={value >= 2 ? 'fas fa-star' : value >= 1.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i></span>\r\n            <span><i style={{color}} className={value >= 3 ? 'fas fa-star' : value >= 2.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i></span>\r\n            <span><i style={{color}} className={value >= 4 ? 'fas fa-star' : value >= 3.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i></span>\r\n            <span><i style={{color}} className={value >= 5 ? 'fas fa-star' : value >= 4.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i></span>\r\n            <span>{ text && text }</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nRating.defaultProps = {\r\n    color: '#f8e825',\r\n    // value: 0\r\n}\r\n\r\nexport default Rating\r\n",["187","188"],"C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\components\\Product.js",[],"C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\screens\\RegisterScreen.js",[],"C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\screens\\ProfileScreen.js",["189"],"import React, {useState, useEffect} from 'react'\r\nimport { Form, Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { listMyOrders } from '../actions/orderActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\n    const ProfileScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\nuseEffect(() => {\r\n    if (!userInfo) {\r\n        history.push('/login')\r\n    } else {\r\n        if (!user || !user.name || success) {\r\n            // dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n            dispatch(getUserDetails('profile'))\r\n            dispatch(listMyOrders())\r\n        } else {\r\n            setName(user.name)\r\n            setEmail(user.email)\r\n        }\r\n    }\r\n}, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n            <h2>User Profile</h2>\r\n            {message && <Message variant='danger'>{message}</Message>}            \r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {success && <Message variant='success'>Profile Updated</Message>}\r\n            {loading && <Loader></Loader>}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type='anme' placeholder='Enter name' value={name} onChange={(e) => setName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control type='email' placeholder='Enter email' value={email} onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Enter password' value={password} onChange={(e) => setPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Confirm password' value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Update\r\n                </Button>\r\n            </Form>\r\n            </Col>\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? <Loader /> : errorOrders ? <Message variant='danger'>{errorOrders}</Message> : (\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>DATE</th>\r\n                                <th>TOTAL</th>\r\n                                <th>PAID</th>\r\n                                <th>DELIVERED</th>\r\n                                <th>VIEW</th>\r\n                            </tr>\r\n                        </thead>                            \r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.createdAt.substring(0, 10)}</td>\r\n                                        <td>{order.totalPrice}</td>\r\n                                        <td>\r\n                                            {order.isPaid ? (\r\n                                            order.paidAt.substring(0, 10)\r\n                                            ) : (\r\n                                            <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n                                        <td>\r\n                                            {order.isDelivered ? (\r\n                                            order.deliveredAt.substring(0, 10)\r\n                                            ) : (\r\n                                            <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button className='btn-sm' variant='dark'>\r\n                                                Details\r\n                                            </Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n                                    </tr>\r\n                                        \r\n                                ))}\r\n                            </tbody>\r\n                    </Table>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen","C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\components\\Message.js",[],"C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\screens\\ShippingScreen.js",[],"C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\components\\CheckoutSteps.js",[],["190","191"],"C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\screens\\PaymentScreen.js",[],"C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\screens\\PlaceOrderScreen.js",[],"C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\constants\\orderConstants.js",[],["192","193"],"C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\actions\\orderActions.js",["194"],"import axios from 'axios'\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\nimport {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n//   ORDER_LIST_FAIL,\r\n//   ORDER_LIST_SUCCESS,\r\n//   ORDER_LIST_REQUEST,\r\n//   ORDER_DELIVER_FAIL,\r\n//   ORDER_DELIVER_SUCCESS,\r\n//   ORDER_DELIVER_REQUEST,\r\n} from '../constants/orderConstants'\r\nimport { logout } from './userActions'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(`/api/orders`, order, config)\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n    // dispatch({\r\n    //   type: CART_CLEAR_ITEMS,\r\n    //   payload: data,\r\n    // })\r\n    //localStorage.removeItem('cartItems')\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        // 'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_PAY_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${orderId}/pay`,\r\n      paymentResult,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: ORDER_PAY_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDER_PAY_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\n// export const deliverOrder = (order) => async (dispatch, getState) => {\r\n//   try {\r\n//     dispatch({\r\n//       type: ORDER_DELIVER_REQUEST,\r\n//     })\r\n\r\n//     const {\r\n//       userLogin: { userInfo },\r\n//     } = getState()\r\n\r\n//     const config = {\r\n//       headers: {\r\n//         Authorization: `Bearer ${userInfo.token}`,\r\n//       },\r\n//     }\r\n\r\n//     const { data } = await axios.put(\r\n//       `/api/orders/${order._id}/deliver`,\r\n//       {},\r\n//       config\r\n//     )\r\n\r\n//     dispatch({\r\n//       type: ORDER_DELIVER_SUCCESS,\r\n//       payload: data,\r\n//     })\r\n//   } catch (error) {\r\n//     const message =\r\n//       error.response && error.response.data.message\r\n//         ? error.response.data.message\r\n//         : error.message\r\n//     if (message === 'Not authorized, token failed') {\r\n//       dispatch(logout())\r\n//     }\r\n//     dispatch({\r\n//       type: ORDER_DELIVER_FAIL,\r\n//       payload: message,\r\n//     })\r\n//   }\r\n// }\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_MY_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDER_LIST_MY_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\n// export const listOrders = () => async (dispatch, getState) => {\r\n//   try {\r\n//     dispatch({\r\n//       type: ORDER_LIST_REQUEST,\r\n//     })\r\n\r\n//     const {\r\n//       userLogin: { userInfo },\r\n//     } = getState()\r\n\r\n//     const config = {\r\n//       headers: {\r\n//         Authorization: `Bearer ${userInfo.token}`,\r\n//       },\r\n//     }\r\n\r\n//     const { data } = await axios.get(`/api/orders`, config)\r\n\r\n//     dispatch({\r\n//       type: ORDER_LIST_SUCCESS,\r\n//       payload: data,\r\n//     })\r\n//   } catch (error) {\r\n//     const message =\r\n//       error.response && error.response.data.message\r\n//         ? error.response.data.message\r\n//         : error.message\r\n//     if (message === 'Not authorized, token failed') {\r\n//       dispatch(logout())\r\n//     }\r\n//     dispatch({\r\n//       type: ORDER_LIST_FAIL,\r\n//       payload: message,\r\n//     })\r\n//   }\r\n// }\r\n",["195","196"],"C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\screens\\HomeScreen.js",[],"C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\screens\\ProductScreen.js",[],"C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\screens\\OrderScreen.js",["197","198"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET } from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({ history, match }) => {\r\n    const orderId = match.params.id\r\n    \r\n   const [sdkReady, setSdkReady] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails)\r\n  const { order, loading, error } = orderDetails\r\n\r\n  const orderPay = useSelector((state) => state.orderPay)\r\n  const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n//   const orderDeliver = useSelector((state) => state.orderDeliver)\r\n//   const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n\r\nif (!loading) {\r\n    //calc total\r\n    const addDecimals = (num) => {\r\n        return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n    order.itemsPrice = addDecimals(\r\n        order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    )\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n\r\n    const addPayPalScript = async () => {\r\n        const { data: clientId } = await axios.get('/api/config/paypal')\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n        //<script src=\"https://www.paypal.com/sdk/js?client-id=YOUR_CLIENT_ID\" data-client-token=\"abc123xyz==\"></script>\r\n        script.async = true\r\n        script.onload = () => {\r\n          setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n      }\r\n\r\n    // if (!order || successPay || successDeliver || order._id !== orderId) {\r\n        if (!order || successPay || order._id !== orderId) {\r\n        dispatch({ type: ORDER_PAY_RESET })\r\n        // dispatch({ type: ORDER_DELIVER_RESET })\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n            addPayPalScript()\r\n            } else {\r\n            setSdkReady(true)\r\n            }\r\n        }\r\n\r\n    // }, [dispatch, orderId, successPay, successDeliver, order])\r\n}, [dispatch, orderId, successPay, order])\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        console.log(paymentResult)\r\n        dispatch(payOrder(orderId, paymentResult))\r\n      }\r\n    \r\n    //   const deliverHandler = () => {\r\n    //     dispatch(deliverOrder(order))\r\n    //   }\r\n\r\n  return loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n    <>\r\n        <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <Card>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p><strong>Name: </strong> {order.user.name}</p>\r\n              <p><strong>Email: </strong> {order.user.email}</p>\r\n              <p><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                {order.shippingAddress.postalCode},{' '}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? <Message variant='success'>Delivered on {order.deliveredAt}</Message> : <Message variant='danger'>Not delivered</Message>}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p><strong>Method: </strong>\r\n              {order.paymentMethod}</p>\r\n              {order.isPaid ? <Message variant='success'>Paid on {order.paidAt}</Message> : <Message variant='danger'>Not paid</Message>}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n          </Card>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderScreen\r\n","C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\screens\\UserListScreen.js",[],"C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\screens\\UserEditScreen.js",[],"C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\screens\\ProductListScreen.js",[],"C:\\Users\\Trevor\\Desktop\\code\\MERN-COMMERNCE\\proshop\\frontend\\src\\screens\\ProductEditScreen.js",[],{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","replacedBy":"202"},{"ruleId":"199","replacedBy":"203"},{"ruleId":"201","replacedBy":"204"},{"ruleId":"199","replacedBy":"205"},{"ruleId":"201","replacedBy":"206"},{"ruleId":"199","replacedBy":"207"},{"ruleId":"201","replacedBy":"208"},{"ruleId":"209","severity":1,"message":"210","line":10,"column":13,"nodeType":"211","messageId":"212","endLine":10,"endColumn":26},{"ruleId":"209","severity":1,"message":"213","line":61,"column":15,"nodeType":"211","messageId":"212","endLine":61,"endColumn":19},{"ruleId":"209","severity":1,"message":"214","line":2,"column":504,"nodeType":"211","messageId":"212","endLine":2,"endColumn":521},{"ruleId":"209","severity":1,"message":"215","line":4,"column":21,"nodeType":"211","messageId":"212","endLine":4,"endColumn":29},{"ruleId":"209","severity":1,"message":"216","line":2,"column":8,"nodeType":"211","messageId":"212","endLine":2,"endColumn":17},{"ruleId":"199","replacedBy":"217"},{"ruleId":"201","replacedBy":"218"},{"ruleId":"209","severity":1,"message":"219","line":8,"column":10,"nodeType":"211","messageId":"212","endLine":8,"endColumn":35},{"ruleId":"199","replacedBy":"220"},{"ruleId":"201","replacedBy":"221"},{"ruleId":"199","replacedBy":"222"},{"ruleId":"201","replacedBy":"223"},{"ruleId":"209","severity":1,"message":"224","line":2,"column":10,"nodeType":"211","messageId":"212","endLine":2,"endColumn":26},{"ruleId":"199","replacedBy":"225"},{"ruleId":"201","replacedBy":"226"},{"ruleId":"209","severity":1,"message":"227","line":5,"column":10,"nodeType":"211","messageId":"212","endLine":5,"endColumn":16},{"ruleId":"228","severity":1,"message":"229","line":75,"column":4,"nodeType":"230","endLine":75,"endColumn":42,"suggestions":"231"},"no-native-reassign",["232"],"no-negated-in-lhs",["233"],["232"],["233"],["232"],["233"],["232"],["233"],"no-unused-vars","'serviceWorker' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","'USER_UPDATE_RESET' is defined but never used.","'Dropdown' is defined but never used.","'PropTypes' is defined but never used.",["232"],["233"],"'USER_UPDATE_PROFILE_RESET' is defined but never used.",["232"],["233"],["232"],["233"],"'CART_CLEAR_ITEMS' is defined but never used.",["232"],["233"],"'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.","ArrayExpression",["234"],"no-global-assign","no-unsafe-negation",{"desc":"235","fix":"236"},"Update the dependencies array to be: [dispatch, orderId, successPay, order, userInfo, history]",{"range":"237","text":"238"},[2664,2702],"[dispatch, orderId, successPay, order, userInfo, history]"]